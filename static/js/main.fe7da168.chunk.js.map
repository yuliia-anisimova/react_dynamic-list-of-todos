{"version":3,"sources":["api.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoList","visibleTodos","selectedTodo","onTodoSelect","className","map","todo","isSelected","id","cn","completed","title","type","onClick","TodoFilter","query","filter","onQueryChange","onFilterChange","value","onChange","event","target","placeholder","style","pointerEvents","Loader","TodoModal","onClose","React","useState","user","setUser","isLoadingUser","setIsLoadingUser","loadUser","a","userId","newUser","console","log","useEffect","href","email","name","App","isLoading","setIsLoading","todos","setTodos","setQuery","setFilter","hasError","setHasError","setSelectedTodo","loadTodos","response","toLowerCase","formattedQuery","includes","newQuery","selectedFilter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fe7da168.chunk.js","sourcesContent":["import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promime\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  visibleTodos: Todo[];\n  selectedTodo: Todo | null;\n  onTodoSelect: (todo: Todo) => void;\n}\n\nexport const TodoList: React.FC<Props> = ({\n  visibleTodos,\n  selectedTodo,\n  onTodoSelect,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {visibleTodos.map((todo) => {\n        const isSelected = selectedTodo && selectedTodo.id === todo.id;\n\n        return (\n          <tr\n            data-cy=\"todo\"\n            className={cn({\n              'has-background-info-light': isSelected,\n            })}\n            key={todo.id}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            {todo.completed\n              ? (\n                <>\n                  <td className=\"is-vcentered\">\n                    <span className=\"icon\" data-cy=\"iconCompleted\">\n                      <i className=\"fas fa-check\" />\n                    </span>\n                  </td>\n                  <td className=\"is-vcentered is-expanded\">\n                    <p className=\"has-text-success\">{todo.title}</p>\n                  </td>\n                </>\n              )\n              : (\n                <>\n                  <td className=\"is-vcentered\" />\n                  <td className=\"is-vcentered is-expanded\">\n                    <p className=\"has-text-danger\">{todo.title}</p>\n                  </td>\n                </>\n              )}\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => onTodoSelect(todo)}\n              >\n                <span className=\"icon\">\n                  <i className={cn('far', {\n                    'fa-eye': !isSelected, 'fa-eye-slash': isSelected,\n                  })}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        );\n      })}\n    </tbody>\n  </table>\n);\n","import React from 'react';\n\ninterface Props {\n  query: string;\n  filter: string;\n  onQueryChange: (value: string) => void;\n  onFilterChange: (value: string) => void;\n}\n\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  filter,\n  onQueryChange,\n  onFilterChange,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          value={filter}\n          onChange={(event) => onFilterChange(event.target.value)}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={(event) => onQueryChange(event.target.value)}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n        {query && (\n          /* eslint-disable-next-line jsx-a11y/control-has-associated-label */\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => onQueryChange('')}\n          />\n        )}\n      </span>\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useState, useEffect } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\n\ninterface Props {\n  selectedTodo: Todo | null;\n  onClose: () => void;\n}\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  onClose,\n}) => {\n  const [user, setUser] = React.useState<User | null>(null);\n  const [isLoadingUser, setIsLoadingUser] = useState(true);\n\n  const loadUser = async () => {\n    try {\n      if (selectedTodo) {\n        const newUser = await getUser(selectedTodo.userId);\n\n        setUser(newUser);\n        setIsLoadingUser(false);\n      }\n    } catch (error) {\n      console.log(error); // eslint-disable-line no-console\n    }\n  };\n\n  useEffect(() => {\n    loadUser();\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoadingUser ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={onClose}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectedTodo?.completed\n                ? (\n                  <strong className=\"has-text-success\">Done</strong>\n                ) : (\n                  <strong className=\"has-text-danger\">Planned</strong>\n                )}\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useState, useEffect } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nexport const App: React.FC = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [query, setQuery] = useState('');\n  const [filter, setFilter] = useState('all');\n  const [hasError, setHasError] = useState(false);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n\n  const loadTodos = async () => {\n    try {\n      const response = await getTodos();\n\n      setTodos(response);\n      setIsLoading(false);\n    } catch (error) {\n      console.log(error); // eslint-disable-line no-console\n\n      setHasError(true);\n    }\n  };\n\n  useEffect(() => {\n    loadTodos();\n  }, []);\n\n  const handleQueryChange = (newQuery: string) => {\n    setQuery(newQuery);\n  };\n\n  const handleFilterChange = (selectedFilter: string) => {\n    setFilter(selectedFilter);\n  };\n\n  const handleModalClose = () => {\n    setSelectedTodo(null);\n  };\n\n  const handleTodoSelect = (todo: Todo) => {\n    setSelectedTodo(todo);\n  };\n\n  const visibleTodos = todos.filter((todo) => {\n    switch (filter) {\n      case 'all':\n        return true;\n      case 'active':\n        return !todo.completed;\n      case 'completed':\n        return todo.completed;\n      default:\n        return false;\n    }\n  }).filter((todo) => {\n    const title = todo.title.toLowerCase();\n    const formattedQuery = query.toLowerCase();\n\n    return title.includes(formattedQuery);\n  });\n\n  return (\n    <>\n      {\n        hasError\n          ? (<p> Something went wrong</p>)\n          : (\n            <>\n              <div className=\"section\">\n                <div className=\"container\">\n                  <div className=\"box\">\n                    <h1 className=\"title\">Todos:</h1>\n\n                    <div className=\"block\">\n                      <TodoFilter\n                        query={query}\n                        filter={filter}\n                        onQueryChange={handleQueryChange}\n                        onFilterChange={handleFilterChange}\n\n                      />\n                    </div>\n\n                    <div className=\"block\">\n                      {isLoading\n                        ? <Loader />\n                        : (\n                          <TodoList\n                            visibleTodos={visibleTodos}\n                            selectedTodo={selectedTodo}\n                            onTodoSelect={handleTodoSelect}\n                          />\n                        )}\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              {selectedTodo && (\n                <TodoModal\n                  selectedTodo={selectedTodo}\n                  onClose={handleModalClose}\n                />\n              )}\n            </>\n          )\n      }\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}